package com.example.nav.db;

import android.content.Context;
import android.content.ContentValues;
import android.database.sqlite.SQLiteDatabase;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;
import android.os.NetworkOnMainThreadException;
import android.util.Log;

import java.util.DuplicateFormatFlagsException;
/**
 * Created by Nav on 9/24/2014.
 */
public class DBAdapter {
    public static final String KEY_ROWID = "id";
    public static final String KEY_NAME = "Name";
    public static final String KEY_PASSWORD= "Password";
    public static final String KEY_MOBILENO = "MobileNo";
    public static final String KEY_NOTES = "notes";
    public static final String DATABASE_NAME = "AssignmentDB";
    public static final String DATABASE_TABLE = "Admin_Detail";
    public static final String DATABASE_TABLE1 = "user_Detail";
    public static final int DATABASE_VERSION = 2;
    private static final String DATABASE_CRETAE =
            "create table if not exists Admin_Detail(id integer primary key autoincrement not null,"
                    + "Name VARCHAR not null,Password VARCHAR,MobileNo VARCHAR);";
    private static final String DATABASE_CRETAE1 =
            "create table if not exists user_Detail(id integer primary key autoincrement not null,"
                    + "Name VARCHAR not null,Password VARCHAR,MobileNo VARCHAR);";
    private final Context context;
    private DatabaseHelper DBHelper;
    private SQLiteDatabase db;
    public DBAdapter(Context ctx) {
        this.context = ctx;
        DBHelper = new DatabaseHelper(context);
    }
    private static class DatabaseHelper extends SQLiteOpenHelper {
        DatabaseHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }
        @Override
        public void onCreate(SQLiteDatabase db) {
            try {
                db.execSQL(DATABASE_CRETAE1);
            }
            catch (SQLiteException e) {
                e.printStackTrace();
            }
        }
        public void onUpgrade(SQLiteDatabase db, int oldversion, int newversion) {
          db.execSQL(DATABASE_CRETAE1);
          onCreate(db);
        }
    }
    public DBAdapter open() throws SQLiteException {
        db = DBHelper.getWritableDatabase();
        return this;
    }
    public void close() {
        DBHelper.close();
    }
    public long insertRecord(String name , String pass,String no ) {
        ContentValues initialValues = new ContentValues();
        initialValues.put(KEY_NAME,name);
        initialValues.put(KEY_PASSWORD,pass);
        initialValues.put(KEY_MOBILENO,no);
        //initialValues.put(KEY_NOTES, notes);
        return db.insert(DATABASE_TABLE1, null, initialValues);
    }





  /*  public boolean deleteRecord(long rowid) {
        return db.delete(DATABASE_TABLE, KEY_ROWID + "=" + rowid, null) > 0;
    }*/
    public  Cursor getAllrecords()
    {
        return db.query(DATABASE_TABLE1,new String[]{KEY_ROWID,KEY_NAME,KEY_PASSWORD,KEY_MOBILENO},null,null,null,null,null);
    }





    //record
   /* public Cursor getRecord(long rowid)throws SQLiteException
    {
        Cursor m=db.query(true,DATABASE_TABLE,new String[]{KEY_ROWID,KEY_TITLE,KEY_DUEDATE,KEY_COURSE,KEY_NOTES},KEY_ROWID+"="+rowid,null,null,null,null,null);
   if(m!=null)
   {
       m.moveToFirst();
   }
    return m;
    }*/


}

